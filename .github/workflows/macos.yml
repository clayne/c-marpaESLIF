name: MacOS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        include:
          - os: macos-latest
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      uses: perl-actions/install-with-cpanm@v1

    # Do perl stuff only on ubuntu-latest : requires apt-get
    - name: Perl pre-requesites
      run: |
        sudo cpanm --notest Dist::Zilla
        sudo cpanm --notest Path::Tiny
        sudo cpanm --notest Moo Moose MooseX::Role::Parameterized
        sudo cpanm --notest Archive::Tar Class::Tiny Config::AutoConf::INI ExtUtils::CBuilder ExtUtils::CppGuess ExtUtils::MakeMaker File::Basename File::chdir File::Copy File::Copy::Recursive File::Find File::Path File::Spec File::Temp IPC::Open3 IPC::Run Params::Validate Perl::OSType Role::Tiny Scalar::Util Test::More Test::More::UTF8 Log::Log4perl Log::Any Log::Any::Adapter Log::Any::Adapter::Log4perl Test::EOL Test::Kwalitee Test::NoTabs Test::Pod::Coverage namespace::clean JSON::MaybeXS
        sudo cpanm --notest Dist::Zilla::PluginBundle::RJBS
        pushd src/bindings/perl && dzil authordeps --missing | xargs sudo cpanm --notest && popd

    - name: Configure
      run: cmake -Wno-dev -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DTCONV_USE_ICU=NO -G "Unix Makefiles" .

    - name: Check
      run: make check VERBOSE=1

    - name: Look for dumps
      run: |
        find . -name "hs_err*log" -print -exec cat {} \;
        find . -name "core*" -print -exec sh -c 'gdb -c "{}" $(gdb -c "{}" -batch | grep -i "Core was generated by" | perl -ne "/\`([ a-zA-Z0-9_\/-]+)/ && print \"\$1\\n\"") -batch -ex "set pagination 0" -ex "thread apply all bt"' -- {} \;
