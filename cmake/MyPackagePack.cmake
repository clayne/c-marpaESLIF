MACRO (MYPACKAGEPACK VENDOR DESCRIPTION)
  #
  # Set-up packaging
  #
  IF (MYPACKAGE_DEBUG)
    MESSAGE (STATUS "[${PROJECT_NAME}-PACK-DEBUG] Configure packaging")
  ENDIF ()
  SET (CPACK_PACKAGE_NAME          "${PROJECT_NAME}")
  SET (CPACK_PACKAGE_VENDOR        "${VENDOR}")
  SET (CPACK_PACKAGE_DESCRIPTION   "${DESCRIPTION}")
  SET (CPACK_PACKAGE_VERSION       "${${PROJECT_NAME}_VERSION}")
  SET (CPACK_PACKAGE_VERSION_MAJOR "${${PROJECT_NAME}_VERSION_MAJOR}")
  SET (CPACK_PACKAGE_VERSION_MINOR "${${PROJECT_NAME}_VERSION_MINOR}")
  SET (CPACK_PACKAGE_VERSION_PATCH "${${PROJECT_NAME}_VERSION_PATCH}")
  IF (EXISTS "${PROJECT_SOURCE_DIR}/LICENSE")
    CONFIGURE_FILE ("${PROJECT_SOURCE_DIR}/LICENSE"  "${CMAKE_CURRENT_BINARY_DIR}/LICENSE.txt")
    SET (CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_BINARY_DIR}/LICENSE.txt")
  ELSE ()
    IF (MYPACKAGE_DEBUG)
      MESSAGE (STATUS "[${PROJECT_NAME}-START-DEBUG] No LICENSE")
    ENDIF ()
    SET (CPACK_RESOURCE_FILE_LICENSE)
  ENDIF ()
  #
  # Enable component to all archive packaging types
  #
  SET (CPACK_ARCHIVE_COMPONENT_INSTALL TRUE)
  #
  # List components automatically setup
  #
  SET (CPACK_ALL_INSTALL_TYPES Full Developer)

  SET (CPACK_COMPONENT_DOCUMENTATIONS_INSTALL_TYPES Full)
  SET (CPACK_COMPONENT_DOCUMENTATIONS_DISPLAY_NAME "Documentations")
  SET (CPACK_COMPONENT_DOCUMENTATIONS_DESCRIPTION "${PROJECT_NAME} documentation")

  SET (CPACK_COMPONENT_LIBRARIES_INSTALL_TYPES Full Developer)
  SET (CPACK_COMPONENT_LIBRARIES_DISPLAY_NAME "Libraries")
  SET (CPACK_COMPONENT_LIBRARIES_DESCRIPTION "${PROJECT_NAME} libraries")

  SET (CPACK_COMPONENT_HEADERS_DEPENDS libraries)
  SET (CPACK_COMPONENT_HEADERS_INSTALL_TYPES Full Developer)
  SET (CPACK_COMPONENT_HEADERS_DISPLAY_NAME "C/C++ Headers")
  SET (CPACK_COMPONENT_HEADERS_DESCRIPTION "${PROJECT_NAME} development headers")

  SET (CPACK_COMPONENT_APPLICATIONS_DEPENDS libraries)
  SET (CPACK_COMPONENT_APPLICATIONS_INSTALL_TYPES Full)
  SET (CPACK_COMPONENT_APPLICATIONS_DISPLAY_NAME "Applications")
  SET (CPACK_COMPONENT_APPLICATIONS_DESCRIPTION "Applications that makes use of ${PROJECT_NAME}")

  SET (CPACK_COMPONENTS_ALL documentations libraries headers applications)

  SET (CPACK_COMPONENT_APPLICATIONS_GROUP "Runtime")
  SET (CPACK_COMPONENT_LIBRARIES_GROUP "Development")
  SET (CPACK_COMPONENT_DOCUMENTATIONS_GROUP "Documentation")
  SET (CPACK_COMPONENT_HEADERS_GROUP "Development")

  SET (CPACK_COMPONENT_GROUP_APPLICATIONS_DESCRIPTION "${PROJECT_NAME} applications")
  SET (CPACK_COMPONENT_GROUP_RUNTIME_DESCRIPTION "${PROJECT_NAME} runtime files")
  SET (CPACK_COMPONENT_GROUP_DOCUMENTATIONS_DESCRIPTION "${PROJECT_NAME} documentation")
  SET (CPACK_COMPONENT_GROUP_DEVELOPMENT_DESCRIPTION "${PROJECT_NAME} development")

  #
  # Get all components in one package
  #
  SET (CPACK_COMPONENTS_ALL_IN_ONE_PACKAGE 1)
  #
  # Enable Packaging
  #
  IF (MYPACKAGE_DEBUG)
    MESSAGE (STATUS "[${PROJECT_NAME}-PACK-DEBUG] Include CPack")
  ENDIF ()
  INCLUDE (CPack)
ENDMACRO()
